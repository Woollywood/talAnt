//Заголовки, общие БЭМ блоки и т.д.
.button {
	display: inline-block;
	@media (min-width: $lowestScreen) {
		padding: rem(16) rem(40);
	}
	@media (max-width: $lowestScreen) {
		padding: rem(16) rem(32);
	}
	border-radius: rem(4);
	height: rem(58);
	background-color: $main-color;

	@include adaptiveValue('font-size', 16, 14, 0, 768, 375);
	font-weight: 600;
	line-height: 160%;
	color: $white-color;

	transition: all 0.3s ease;
	@media (any-hover: hover) {
		&:hover {
			background-color: #b22323;
		}
	}
}

.input-wrapper {
	position: relative;

	display: inline-flex;
	flex-direction: column;
	padding: rem(16) rem(24);
	border-radius: rem(4);
	background-color: $bg-color;
	border: rem(1) solid $bg-color;

	height: rem(58);

	transition: all 0.3s ease;
	@media (any-hover: hover) {
		&:hover {
			border: rem(1) solid #a1aab2;
		}
	}

	&._form-focus {
		border: rem(1) solid #a1aab2;
	}

	&._form-error {
		border: rem(1) solid $main-color;
		margin-bottom: rem(13);

		@media (max-width: em(1086)) and (min-width: em(1024)) {
			margin-bottom: rem(36);

			.input-error {
				white-space: normal;
				max-width: rem(200);
			}
		}

		@media (max-width: em(836)) and (min-width: em(768)) {
			margin-bottom: rem(36);

			.input-error {
				white-space: normal;
				max-width: rem(200);
			}
		}
	}
}

.input {
	height: 100%;
	width: 100%;
	background-color: transparent;

	.input-wrapper_password & {
		width: 90%;
	}

	color: $txt-3-color;
	font-size: rem(16);
	font-weight: 500;
	line-height: 160%;

	&._form-focus {
		color: $black-color;
	}
}

.input-viewpass {
	position: absolute;
	top: 50%;
	transform: translateY(-50%);
	right: rem(24);

	&::before {
		transition: all 0.3s ease;
		font-size: rem(14);
	}

	@media (any-hover: hover) {
		&:hover {
			&::before {
				color: $main-color;
			}
		}
	}
}

.input-error {
	position: absolute;
	top: 100%;
	left: 0;
	white-space: nowrap;

	width: 100%;
	text-align: right;

	display: none;
	._form-error & {
		display: block;
	}

	font-size: rem(11);
	font-weight: 600;
	line-height: 160%;
	color: $main-color;

	text-align: right;
}

.preview-icon {
	position: absolute;
	z-index: 10;
	top: 50%;
	left: 50%;
	transform: translate(-50%, -50%);

	&__icon-wrapper {
		position: relative;

		&::before {
			content: '';
			position: absolute;
			z-index: 1;
			top: 0;
			left: 0;
			transform: translate(-50%, -50%);

			display: block;
			width: rem(60);
			height: rem(60);
			border-radius: 50%;
			background-color: $main-color;

			transition: all 0.3s ease;
		}

		&::after {
			content: '';
			position: absolute;
			z-index: 0;
			top: 0;
			left: 0;
			transform: translate(-50%, -50%);

			display: block;
			width: rem(90);
			height: rem(90);
			border-radius: 50%;
			border: 1px solid rgba(255, 255, 255, 0.15);
			background: rgba(255, 255, 255, 0.2);
			backdrop-filter: blur(2.5px);
		}

		> * {
			position: absolute;
			z-index: 2;
			top: 0;
			left: 0;
			transform: translate(-50%, -50%);

			&::before {
				font-size: rem(20);
			}
		}
	}

	@media (any-hover: hover) {
		&:hover {
			.preview-icon__icon-wrapper::before {
				background-color: #b22323;
			}
		}
	}
}

.title-font {
	@media (min-width: $mobile) {
		@include adaptiveValue('font-size', 48, 36, 0, $maxWidthContainer, 1024);
	}

	@media (max-width: $mobile) {
		font-size: rem(28);
	}

	font-weight: 600;
	line-height: 140%;
}

.text-font {
	@include adaptiveValue('font-size', 16, 14, 0, 768, 375);
	line-height: 160%;
}

.sub-title-font {
	@include adaptiveValue('font-size', 20, 16, 0, 768, 375);
	font-weight: 600;
	line-height: 150%;
}

.slider-arrow {
	width: rem(56);
	height: rem(56);
	border-radius: 50%;
	background-color: rgba(255, 255, 255, 0.9);
	box-shadow: 0px 4px 8px 0px rgba(0, 0, 0, 0.05);
	backdrop-filter: blur(5px);

	font-size: rem(7);

	transition: all 0.3s ease;
	@media (any-hover: hover) {
		&:hover {
			background-color: rgba(255, 255, 255, 0.6);
		}
	}
}

.arrow-next {
	&::before {
		transform: rotate(-90deg);
	}
}

.arrow-prev {
	&::before {
		transform: rotate(90deg);
	}
}

.form-feedback {
	background-color: $bg-color;

	&_1 {
		.form-feedback__background-ibg {
			@media (min-width: $tablet) {
				left: rem(30);
			}
		}
	}

	&_3 {
		.form-feedback__background-ibg {
			@media (max-width: $mobileSmall) {
				img {
					object-position: 60%;
				}
			}
		}

		.form-feedback__private {
			@media (max-width: $mobileSmall) {
				color: rgba(#fff, 0.6);
			}

			@media (min-width: $mobileSmall) {
				color: $txt-3-color;
			}

			@media (min-width: $tablet) {
				color: $txt-2-color;
			}
		}
	}

	&_pb {
		@media (max-width: $tablet) {
			@include adaptiveValue('padding-bottom', 100, 80, 0, 1024, 768);
		}

		@media (min-width: $tablet) {
			@include adaptiveValue('padding-bottom', 100, 80, 0, 1024, 768);
		}
	}

	&__container {
	}

	&__body {
		position: relative;
		border-radius: rem(8);
		overflow: hidden;

		@media (max-width: $mobile) {
			@include adaptiveValue('padding-top', 40, 25, 0, 768, 375);
			@include adaptiveValue('padding-left', 60, 30, 0, 768, 375);
			@include adaptiveValue('padding-right', 60, 30, 0, 768, 375);
			@include adaptiveValue('padding-bottom', 40, 25, 0, 768, 375);
		}

		@media (min-width: $mobile) {
			@include adaptiveValue('padding-top', 80, 40, 0, $maxWidthContainer, 1024);
			@include adaptiveValue('padding-left', 100, 60, 0, $maxWidthContainer, 1024);
			@include adaptiveValue('padding-right', 100, 60, 0, $maxWidthContainer, 1024);
			@include adaptiveValue('padding-bottom', 80, 40, 0, $maxWidthContainer, 1024);
		}
	}

	&__inner {
		position: relative;
		z-index: 1;
	}

	&__title {
		&_white {
			color: $white-color;
		}

		max-width: rem(666);

		&:not(:last-child) {
			margin-bottom: rem(10);
		}
	}

	&__text {
		&_white {
			color: $white-color;
		}

		&:not(:last-child) {
			@include adaptiveValue('margin-bottom', 50, 30, 0, $maxWidthContainer, 1024);
		}
	}

	&__form {
		display: flex;
		gap: rem(16);

		@media (max-width: $tablet) {
			flex-direction: column;
		}

		&:not(:last-child) {
			margin-bottom: rem(10);
		}
	}

	&__inputs {
		min-width: 0;

		display: flex;
		@media (max-width: $mobile) {
			flex-wrap: wrap;
		}
		gap: rem(16);

		> * {
			flex: 1 1 auto;
		}
	}

	&__input {
		min-width: rem(120);

		@media (max-width: $mobileSmall) {
			flex-shrink: 0;
		}

		@media (max-width: $tablet) {
			flex: 1 1 auto;
		}
	}

	&__button {
		flex-shrink: 0;
	}

	&__private {
		color: $txt-3-color;
		font-size: rem(13);
		line-height: 160%;

		@media (max-width: $mobileSmall) {
			font-size: rem(12);
		}

		a {
			text-decoration: underline;

			@media (any-hover: hover) {
				&:hover {
					text-decoration: none;
				}
			}
		}

		&_grey {
			color: rgba($white-color, 0.6);
		}
	}

	&__background-ibg {
		position: absolute;
		z-index: 0;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;

		img {
			object-position: left;
		}
	}
}

.popup-title-font {
	font-size: rem(28);
	font-weight: 600;
	line-height: 140%;
}

// <br>, который отключается на мобильных экранах
.br-mobile {
	@media (max-width: em(768)) {
		display: none;
	}
}

.br-tablet {
	@media (max-width: em(1024)) {
		display: none;
	}
}

.br-low {
	@media (max-width: $mobileSmall) {
		display: none;
	}
}

.padding-top {
	@media (max-width: $tablet) {
		@include adaptiveValue('padding-top', 100, 80, 0, 1024, 768);
	}

	@media (min-width: $tablet) {
		@include adaptiveValue('padding-top', 120, 100, 0, 1328, 1024);
	}
}

.padding-bottom {
	@media (max-width: $tablet) {
		@include adaptiveValue('padding-bottom', 100, 80, 0, 1024, 768);
	}

	@media (min-width: $tablet) {
		@include adaptiveValue('padding-bottom', 120, 100, 0, 1328, 1024);
	}
}

.padding-bottom-reset {
	padding-bottom: 0 !important;
}

.border-top {
	border-top: rem(1) solid #e4e7eb;
}

.border-bottom {
	border-bottom: rem(1) solid #e4e7eb;
}

.slider-proccesses__arrows .slider-arrow {
	display: unset !important;
}
